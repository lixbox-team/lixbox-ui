    

task updateLocalRegistry(group: "Project Generation", description: 'Initializes the local registry for dev.' )  {
    doLast {  
        def localRegistryFile = file("./gradle/config/localRegistry.properties");     
        if (localRegistryFile.exists())
        {
            def props = new Properties()
            localRegistryFile.withInputStream { props.load(it) }
            println props
            
            //prepare local registry config
            def registry = new Properties()
            registry.put("registry.uri",props.getProperty("registry.uri"));
            def writer = new FileWriter(Paths.get(System.getProperty("java.io.tmpdir") + "/registryConfig.properties").toFile())
            try {
                registry.store(writer, 'Registry local config for dev')
                writer.flush()
            } finally {
                writer.close()
            }
            
            //prepare registry_server_file
            StringBuilder sbf = new StringBuilder("{");
            for (String name : props.propertyNames())
            {
                if (name.startsWith("service."))
                {
                    sbf.append("\"");
                    sbf.append(name.substring(8));
                    sbf.append("\":");
                    sbf.append(props.getProperty(name));                
                    sbf.append(",");               
                }            
            }
            sbf.replace(sbf.length()-1, sbf.length(), "}")
            Paths.get(System.getProperty("java.io.tmpdir") + "/service_registry_server").toFile().text = sbf;
            Paths.get(System.getProperty("java.io.tmpdir") + "/service_registry_client").toFile().text = sbf;
        }
    }
}

tasks.clean.finalizedBy(tasks.updateProject);
tasks.clean.finalizedBy(tasks.updateLocalRegistry);